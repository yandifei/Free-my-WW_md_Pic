[General]
SyntaxVersion=2
BeginHotkey=121
BeginHotkeyMod=0
PauseHotkey=19
PauseHotkeyMod=0
StopHotkey=123
StopHotkeyMod=0
RunOnce=1
EnableWindow=
MacroID=7839a6cb-4b15-41b0-9b6c-2e5c3f0fd656
Description=自动跳过剧情
Enable=1
AutoRun=0
[Repeat]
Type=0
Number=1
[SetupUI]
Type=1
QUI=Form1
[Relative]
SetupOCXFile=
[Comment]

[UIPackage]



[Script]
//必要的函数和变量定义，方便独立的模块开发
Goto 必要的全局变量计算定义
Rem 新添加的全局变量计算定义
/*-------------------------------------------新添加的全局变量计算定义------------------------------------------*/
/*==========游戏辅助模块==========*/
//后面补
Global key_number : key_number = 0//键盘按键码
Global WW_auto_skip_cutscene_key_number : WW_auto_skip_cutscene_key_number = Form1.自动跳过剧情.Text//自动跳过剧情
Global WW_auto_skip_cutscene_flag : WW_auto_skip_cutscene_falg = 0//自动跳过剧情开启关闭标志位
//TracePrint WW_auto_skip_cutscene_key_number
//TracePrint Chr("F5")

//Global WW_auto_fright_key_number : WW_auto_fright_key_number = 输入文本(Form1.自动战斗.Text)//启动/关闭自动战斗的按键码
//Global WW_auto_  
/*---------------------------------------------开发新的功能代码存放地------------------------------------------*/
Plugin.SMWH.Hook_Mouse 参数1,参数2,参数3
//KeyPress 91, 1
thread_WW_function_switch = BeginThread(WW_function_switch)//监控功能开关
thread_get_key_number = BeginThread(get_key_number) //获取键盘按键码
thread_WW_auto_skip = BeginThread(WW_auto_skip)//开启自动剧情的线程
//
//If WW_skip_cutscenex() > 0 Then 
//MessageBox 1
//End If
/*
If WW_skip_cutscenex() > 0 Then 
    //	ml WW_skip_cutscenex(), WW_skip_cutsceney, 200, 200
    esc 1000//按这个按键也能跳过剧情
    If Note_interface() > 0 Then 
        ml 952, 585, 500, 500//点击本次登录不再提示
        ml 1275,652, 500, 500//点击确认
    End If    
    key_number = 0//按键码初始为0,避免影响下一个线程
End If
*/
//自动跳过剧情
Sub WW_auto_skip()
    Do
//		If WW_auto_skip_cutscene_flag = 0 and key_number = WW_auto_skip_cutscene_key_number Then 
//			WW_auto_skip_cutscene_flag = 1//关闭状态设为开启
//		ElseIf WW_auto_skip_cutscene_flag = 1 and key_number = WW_auto_skip_cutscene_key_number Then
//			WW_auto_skip_cutscene_flag = 1//开启状态设为关闭
//		End If
		
//		If WW_auto_skip_cutscene_flag = 1 and key_number = WW_auto_skip_cutscene_key_number Then //激活该子程序
		
        
        Delay 100
    Loop 
End Sub



/*==========游戏辅助线程==========*/
Sub get_key_number()//获取键盘按键码
    Do
        key_number = WaitKey()
        TracePrint "当前按键码是" & key_number
    Loop
End Sub
///*==========功能开关监控线程==========*/
//Sub WW_function_switch()//获取键盘按键码
//    Do
//        If 
//    Loop
//End Sub

/*-------------------------------------------------开发增加的图色----------------------------------------------*/


//剧情跳过按钮图色
//检测活跃度宝箱的金色条像素点(输入点位、封装成单点找色)
Function WW_skip_cutscenex()
	FindColorEx 184,65,184,65,"F4EFE8",1,0.9,WW_skip_cutscenex,WW_skip_cutsceney
End Function
//Function WW_skip_cutscenex() 
//    XY=Plugin.Color.FindMutiColor(173,47,198,81,"EEEAEB","0|3|EEEAEB,0|7|EEEAEB,2|8|EEEAEB,2|2|EEEAEB,3|2|EEEAEB,3|6|EEEAEB,5|6|EEEBEB,5|3|EEEBEB",0.)
//    MyArray = Split(XY, "|")
//    WW_skip_cutscenex = CInt(MyArray(0)): WW_skip_cutsceney = CInt(MyArray(1))	
//End Function
//

Goto 代码开发结束
/*--------------------------------------------必要的全局变量计算定义-------------------------------------------*/
Rem 必要的全局变量计算定义
/*==========脚本额外功能录入==========*/
Global Free_my_WW_start : Free_my_WW_start = 1//反馈脚本开始了,停止不必要的计时器或线程
Global WW_wind : WW_wind = 0//鸣潮窗口句柄
Global 统计可能崩溃时间 : 统计可能崩溃时间 = 0//检测每秒UID不存在的次数
Global 指定累计崩溃时间 : 指定累计崩溃时间 = Abs(Form1.指定次数检测不到UID判定崩溃.Text)//指定每秒检测次数判定崩溃(必须加转换数字的函数，不然失效)
Global picture_color_similarity : picture_color_similarity = Form1.脚本图色的相似度.Text //脚本图像颜色的相似度
/*==========游戏辅助模块==========*/
//后面补
//Global key_number : key_number = 0//键盘按键码
//Global WW_auto_fright_key_number : WW_auto_fright_key_number = 输入文本(Form1.自动战斗.Text)//启动/关闭自动战斗的按键码
//Global WW_auto_  
/*==========玩家账号基础录入==========*/
Global WW_SOL_level : WW_SOL_level = Form1.索拉等级.Text//索拉等级
/*==========传送相关模块功能开关==========*/
//0为关闭，1为开启(游戏路径是直接使用,不可重定义)
Global open_WW_wp : open_WW_wp = Form1.打开借位信标传送.ListIndex //打开借位信标传送
Global no_wpx_error_message : no_wpx_error_message = Form1.检测不到借位信标提示报错.ListIndex//检测不到借位信标提示报错(前提是打开借位信标传送)
/*==========战斗相关模块功能开关==========*/
Global 自定义战斗 : 自定义战斗 = Form1.自定义战斗.ListIndex//选择默认的1秒速切还是自定义的战斗模式(用户自定义)
Global double_jude_boss_die_time : double_jude_boss_die_time = Form1.boss死亡的双重检测间隔时间.Text //boss死亡的双重检测间隔时间(用户自定义)
Global ch1_delay : ch1_delay = Form1.一号角色驻场时间.Text * 1000//一号角色驻场时间(用户自定义)
Global ch2_delay : ch2_delay = Form1.二号角色驻场时间.Text * 1000//二号号角色驻场时间(用户自定义)
Global ch3_delay : ch3_delay = Form1.三号角色驻场时间.Text * 1000//三号角色驻场时间(用户自定义)
Global WW_weekly_ch_alldie_record : WW_weekly_ch_alldie_record = 0//记录副本内角色死亡的情况
/*==========领取模块自定义==========*/
//Global switch_to_reward : switch_to_reward = 0 : Call switch_to_reward_process() //切人领取的按键码和判断
Global cycles : cycles = Form1.拾取声骇转圈次数.Text //击败boss后转圈拾取声骇的转圈次数,转圈次数越多,拾取的范围越大,时间越长(用户自定义)
Global cycles_unity : cycles_unity = Form1.转圈拾取递增单位.Text//0.4秒,如果开始就要冲刺那么初始单位就是0.4(用户自定义)
/*==========热键修改(总共36个热热键可修改)==========*/
//后面加转换
Global Move_forward : Move_forward = Form1.向前移动.Text//向前移动
Global Move_backward : Move_backward = Form1.向后移动.Text//向后移动
Global Move_left : Move_left = Form1.向左移动.Text//向左移动
Global Move_right : Move_right = Form1.向右移动.Text//向右移动
Global Walk_or_Run : Walk_or_Run = Form1.走跑切换.Text//走跑切换//走/跑切换
Global Dash_or_Dodge : Dash_or_Dodge = Form1.冲刺闪避.Text//冲刺闪避//冲刺/闪避
Global Resonance_Skill : Resonance_Skill = Form1.共鸣技能.Text//共鸣技能
Global Resonance_Liberation : Resonance_Liberation = Form1.共鸣解放.Text//共鸣解放
Global Use_Utility : Use_Utility = Form1.探索工具.Text//探索工具
Global Utility_Wheel : Utility_Wheel = Form1.模块轮盘.Text//模块轮盘//探索模块轮盘
Global Echo_Skill : Echo_Skill = Form1.声骸技能.Text//声骸技能
Global Switch_to_Aim_Mode : Switch_to_Aim_Mode = Form1.切换瞄准.Text//切换瞄准//切换瞄准模式
Global Jump : Jump = Form1.跳跃.Text//跳跃
Global Drop_Down_when_Climbing : Drop_Down_when_Climbing = Form1.攀爬时落下.Text//攀爬时落下
Global Pick_Up_or_Interact : Pick_Up_or_Interact = Form1.拾取交互.Text//拾取交互//拾取/交互
Global Switch_to_Team_Member_1 : Switch_to_Team_Member_1 = Form1.切换编队1号队员.Text//切换编队1号队员
Global Switch_to_Team_Member_2 : Switch_to_Team_Member_2 = Form1.切换编队2号队员.Text//切换编队2号队员
Global Switch_to_Team_Member_3 : Switch_to_Team_Member_3 = Form1.切换编队3号队员.Text//切换编队3号队员
Global Switch_to_Team_Member_4 : Switch_to_Team_Member_4 = Form1.切换编队4号队员.Text//切换编队4号队员
Global Track_Quest : Track_Quest = Form1.任务追踪.Text//任务追踪
Global Quit_Challenge : Quit_Challenge = Form1.中断挑战.Text//中断挑战
Global Quick_Access_Wheel : Quick_Access_Wheel = Form1.功能入口轮盘.Text//功能入口轮盘
Global Mail : Mail = Form1.邮件.Text//邮件
Global Map1 : Map1 = Form1.地图.Text//地图
Global Quests : Quests = Form1.任务.Text//任务
Global Team : Team = Form1.编队.Text//编队
Global Backpack : Backpack = Form1.背包.Text//背包
Global Resonator : Resonator = Form1.共鸣者.Text//共鸣者
Global Utilities : Utilities = Form1.探索模块.Text//探索模块
Global Tutorial : Tutorial = Form1.教程百科.Text//教程百科
Global Chat : Chat = Form1.聊天.Text//聊天
Global Events : Events = Form1.活动.Text//活动
Global Guidebook : Guidebook = Form1.索拉指南.Text//索拉指南
Global Convene : Convene = Form1.唤取.Text//唤取
Global Pioneer_Podcast : Pioneer_Podcast = Form1.先约电台.Text//先约电台
Global Co_op_Mode : Co_op_Mode = Form1.多人游戏.Text//多人游戏
/*----------------------------------------全局变量计算依赖的子程序调------------------------------------------*/
//小键盘区域强制转换(按键精灵的bugm,代码修复)
Function 转换文本(输入文本)
    If 输入文本 = "num0" Then
        转换文本 = 96
    ElseIf 输入文本 = "num1" Then 
        转换文本 = 97
    ElseIf 输入文本 = "num2" Then
        转换文本 = 98
    ElseIf 输入文本 = "num3" Then
        转换文本 = 99
    ElseIf 输入文本 = "num4" Then
        转换文本 = 100
    ElseIf 输入文本 = "num5" Then
        转换文本 = 101
    ElseIf 输入文本 = "num6" Then
        转换文本 = 102
    ElseIf 输入文本 = "num7" Then
        转换文本 = 103
    ElseIf 输入文本 = "num8" Then
        转换文本 = 104
    ElseIf 输入文本 = "num9" Then
        转换文本 = 105
    ElseIf 输入文本 = "num*" Then
        转换文本 = 106
    ElseIf 输入文本 = "num+" Then
        转换文本 = 107
    ElseIf 输入文本 = "num-" Then
        转换文本 = 109
    ElseIf 转换文本 = "num." Then
        转换文本 = 110
    ElseIf 输入文本 = "num/" Then
        转换文本 = 111
    ElseIf 输入文本 = "num" Then
        转换文本 = 114
    End If
End Function
//切人领取的按键码和切人按键码的判断
//Sub switch_to_reward_process()
//    If Form1.领取角色.ListIndex = 0 Then //一号位角色领取
//        switch_to_reward = 49
//    ElseIf Form1.领取角色.ListIndex = 1 Then//二号位角色领取
//        switch_to_reward = 50
//    ElseIf Form1.领取角色.ListIndex = 2 Then//三号位角色领取
//        switch_to_reward = 51
//    ElseIf Form1.领取角色.ListIndex = 3 Then//四号位角色领取
//        switch_to_reward = 52
//    End If
//End Sub
Goto 新添加的全局变量计算定义
Rem 代码开发结束
//游戏操作函数封装(没有战斗的，战斗逻辑复杂得看着来搬运)
/*------------------------------------------------脚本图色封装------------------------------------------------*/
/*=============进入游戏界面函数封装=============*/
//鸣潮启动器启动进入按键检测
Function WW_launcherx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"E6E6E6","4|37|E6E6E6,25|37|E6E6E6,25|-5|E6E6E6,74|-5|E6E6E6,74|34|E6E6E6,120|34|E6E6E6,120|6|E6E6E6,145|3|E6E6E6,145|15|E6E6E6,145|31|E6E6E6,11|9|333333,19|9|E6AF75,22|7|333333,21|17|333333,21|22|333333,31|21|333333,34|14|333333,34|6|555555,41|6|333333,41|11|333333,41|19|335593,46|24|333333,46|14|333333",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_launcherx = CInt(MyArray(0)): WW_launchery = CInt(MyArray(1))
End Function
//进入游戏字体检测(检测点击连接和退出的字体)
Function WW_come_gamex()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","-6|0|FFFFFF,-10|0|FFFFFF,-14|0|FFFFFF,-17|0|FFFFFF,-19|0|FFFFFF,-19|7|FFFFFF,-17|7|FFFFFF,-13|7|FFFFFF,-10|7|FFFFFF,-6|7|FFFFFF,-2|7|FFFFFF,0|7|FFFFFF,0|12|FFFFFF,0|18|FFFFFF,0|19|FFFFFF,-4|19|FFFFFF,-8|19|FFFFFF,-13|19|FFFFFF,-17|19|FFFFFF,-19|15|FFFFFF,24|15|FFFFFF,24|12|FFFFFF,30|12|FFFFFF,17|12|FFFFFF,17|6|FFFFFF,22|6|FFFFFF,26|6|FFFFFF,30|6|FFFFFF,40|1|FFFFFF,40|11|FFFFFF,40|17|FFFFFF,835|-33|3CB4FF,849|-33|3CB4FF,867|-33|3CB4FF,878|-33|3CB4FF,885|-33|3CB4FF,888|12|3CB4FF,835|22|3CB4FF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_come_gamex = CInt(MyArray(0)): WW_come_gamey = CInt(MyArray(1))
End Function
/*==============初始化游戏设置图色封装=============*/
//检测终端界面加载完成
Sub WW_esc_co()
    Do Until WW_esc_cox() > 0
        Delay 2000
        If WW_esc_cox() < 0 Then
            esc 1000
        End If
    Loop
End Sub
//检测终端界面(检测终端左上角,用来检测打开终端加载)
Function WW_esc_cox()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"CEE7EA","0|-4|CEE7EA,3|-4|CEE7EA,-4|-3|CEE7EA,0|-8|CEE7EA,10|-10|CEE7EA,10|-13|CEE7EA,13|-13|CEE7EA,6|-13|CEE7EA,10|-17|CEE7EA,0|-20|CEE7EA,0|-23|CEE7EA,3|-23|CEE7EA,-4|-24|CEE7EA,0|-27|CEE7EA,-10|-17|CEE7EA,-10|-14|CEE7EA,-10|-10|CEE7EA,-7|-13|CEE7EA,-14|-14|CEE7EA,40|-2|CEE7EA,39|-8|CEE7EA,39|-17|CEE7EA,51|-21|CEE7EA,60|-22|CEE7EA,55|-15|CEE7EA,84|-20|CEE7EA,84|-23|CEE7EA,84|-15|CEE7EA,88|-15|CEE7EA,78|-15|CEE7EA,90|-22|CEE7EA,78|-22|CEE7EA",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_esc_cox = CInt(MyArray(0)) : WW_esc_coy = CInt(MyArray(1))
End Function
//检测设置按钮
Function WW_setx()
    XY=Plugin.Color.FindMutiColor(1722,988,1826,1073,"FFFFFF","3|-6|FFFFFF,20|-15|FFFFFF,27|-13|FFFFFF,42|-6|FFFFFF,45|-1|FFFFFF,44|18|FFFFFF,41|22|FFFFFF,26|32|FFFFFF,19|32|FFFFFF,4|21|FFFFFF,0|17|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_setx = CInt(MyArray(0)) : WW_sety = CInt(MyArray(1))
    WW_setx = WW_setx + 20
End Function
//设置中镜头重置开关
Function camera_reset_x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","0|-4|FFFFFF,0|-7|FFFFFF,0|-11|FFFFFF,0|-12|FFFFFF,8|-7|FFFFFF,19|-7|FFFFFF,28|-6|FFFFFF,32|-6|FFFFFF,35|-6|FFFFFF,37|-6|FFFFFF,39|-6|FFFFFF,41|-6|FFFFFF,43|-6|FFFFFF,45|-6|FFFFFF,46|-6|FFFFFF,48|-6|FFFFFF,48|-6|FFFFFF,67|2|FFFFFF,67|1|FFFFFF,67|-1|FFFFFF,67|-3|FFFFFF,67|-5|FFFFFF,67|-6|FFFFFF,67|-8|FFFFFF,67|-9|FFFFFF,67|-11|FFFFFF,67|-12|FFFFFF,67|-14|FFFFFF,67|-15|FFFFFF,67|-17|FFFFFF,105|1|FFFFFF,105|-2|FFFFFF,105|-4|FFFFFF,105|-6|FFFFFF,105|-7|FFFFFF,88|-7|FFFFFF,88|-3|FFFFFF,88|-2|FFFFFF,88|0|FFFFFF,88|2|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    camera_reset_x = CInt(MyArray(0)) : camera_reset_y = CInt(MyArray(1))
    camera_reset_x = camera_reset_x + 1400 : camera_reset_y = camera_reset_y - 15
End Function
/*=============等待游戏加载图色及函数(检测崩溃也在)=============*/
//鸣潮游戏主界面加载完成(包括带了没声骇和)
Sub WW_laco()//判断加载完成游戏主界面(UID和任务以及终端按钮)
    Do Until WW_lacox() > 0 and WW_lacox_add_x() > 0
        Delay 1000
    Loop
End Sub
//检测特征码(加载时特征码会消失)//最新版本
Function WW_lacox()//2024.12的版本0.9稳定,QQ录屏不会被遮挡
    XY=Plugin.Color.FindMutiColor(1690,1057,1776,1080,"FFFFFF","0|-8|FFFFFF,-30|-8|FFFFFF,-30|-6|FFFFFF,-35|-6|FFFFFF,-35|-5|FFFFFF,-40|-5|FFFFFF,-40|-4|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_lacox = CInt(MyArray(0)): WW_lacoy = CInt(MyArray(1))
End Function
//检测特征码线程专属,检测崩溃
Function WW_thread_lacox()//2024.12的版本0.9稳定,QQ录屏不会被遮挡
    XY=Plugin.Color.FindMutiColor(1690,1057,1776,1080,"FFFFFF","0|-8|FFFFFF,-30|-8|FFFFFF,-30|-6|FFFFFF,-35|-6|FFFFFF,-35|-5|FFFFFF,-40|-5|FFFFFF,-40|-4|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_thread_lacox = CInt(MyArray(0)): WW_thread_lacoy = CInt(MyArray(1))
End Function
//检测UID和任务以及终端按钮
Function WW_lacox_add_x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","-3|0|FFFFFF,-3|-3|FFFFFF,-3|4|FFFFFF,-8|0|FFFFFF,-1797|194|FFFFFF,-1800|194|FFFFFF,-1805|194|FFFFFF,-1812|194|FFFFFF,-1817|194|FFFFFF,-1818|194|FFFFFF,-1818|190|FFFFFF,-1818|186|FFFFFF,-1818|181|FFFFFF,-1818|177|FFFFFF,-1818|173|FFFFFF,-1818|171|FFFFFF,-1818|167|FFFFFF,-1818|163|FFFFFF,-1818|161|FFFFFF,-1815|161|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_lacox_add_x = CInt(MyArray(0)): WW_lacox_add_y = CInt(MyArray(1))
End Function
/*=============传送相关的图色和封装函数=============*/
/*+++++封装好的常用传送函数+++++*/
//初始化地图
Sub WW_in_map()
    map 1000
    Do Until WW_map_cox() > 0//检测成功打开地图
        Delay 1000
    Loop
    Delay 1000//防止卡顿
    ml 1810, 452, 200, 500//点击后会有0.5个像素点的偏差
    map 500
    Call WW_laco()//检测已经返回游戏主界面
End Sub
//去到今州的中枢信标
Sub WW_jinzhou_rb()
    f2 2000
    ml 73 ,175, 200, 1000//点击活跃度
    Do Until WW_re_chx() > 0//检测书的短暂加载
        Delay 1000
    Loop
    ml WW_re_chx, WW_re_chy, 200, 300//点击周期挑战
    ml 424, 286, 200, 1000//点击前往模拟领域
    If WW_double_scanx() > 0 Then //有双倍需要坐标偏移
        ml 1725, 261 + 49, 200, 2200//点击前往按钮(共鸣者经验副本在今州)
    Else 
        ml 1725, 261, 200, 2200//点击前往按钮(共鸣者经验副本在今州)
    End If
    ml 901, 720, 200, 500//点击中枢信标,不调用是因为防止自己和坐标重叠导致检测不到(因为某人才发现卡了)
    Do Until WW_selcet_rbx() > 0 or WW_ftx() > 0//等待主城图标加载完毕(附近有信标选项图标或旅行按钮图标)
        Delay 100
    Loop
    Call WW_selcet_rb()//传送中枢信标并检测加载完成
End Sub
//点击中间,借位信标选项加检测加载
Sub WW_wp()
    If Form1.检测能否直接传送.ListIndex = 1 Then //开启选项
        Delay 500
        If WW_ftx() < 0 Then //检测快速传送的图标判断是否永久解锁附近传送
            MessageBox "未检测到借位信标。方法1：请手动去到boss点位,要boss出现血条,重新启动脚本。方法2：传送地点正在冷却，冷却结束重启脚本。如果下次启动脚本还有这个报错请去脚本的界面,找到“检测无信标能否传送”旁边的下拉框选择关闭,点就保存配置后再次启动脚本。如果前面的步骤都试过了就去群里找人帮忙看看吧"
            ExitScript
        End If
    End If
    If open_WW_wp = 0 Then 
        ml 1593, 994, 200, 500//点击快速旅行
        Call WW_laco()//判断加载完成游戏主界面
        Call space_boss_tp()//特殊处理的boss
    Else
        ml 954, 527, 200, 500//点击定位点(本来是500因为某人太卡了调制1000,把这个部分放到了开头去，2024.12.14删了前头的500)
        If WW_selcet_wpx() > 0 Then 
            ml WW_selcet_wpx, WW_selcet_wpy, 200, 500
            ml 1750, 986, 200, 500//点击借位信标的快速旅行
            Call WW_laco()//判断加载完成游戏主界面
            If WW_selcet_boss_ch_number = 9 and Form1.聚械机偶.Value = 1 and 聚械机偶声骇数量 <> CInt(Form1.聚械机偶1.Text) Then ////对机械做特殊处理
                Delay 14000//测试的得到最少的苏醒量血条的时间是14.8秒
            End If
            If WW_weekly_ch_number = 4 and Form1.鸣钟之龟.Value = 1 and 鸣钟之龟声骇数量 <> CInt(Form1.鸣钟之龟1.Text) Then//对龟做特殊处理 
                Delay 14000//最少前进5秒龟才会开始苏醒,苏醒时间是14.3秒
            End If//加WW_weekly_ch_number是为了只有当前是鸣钟之龟才有这个操作
        ElseIf no_wpx_error_message = 1
            MessageBox "前往的区域未放置借位信标"
            ExitScript //没检测到借位信标停止脚本
        ElseIf WW_selcet_boss_ch_number = 8 Then//辉萤军势在地下如果没有信标点了会有附近的锚点,失去快速旅行的按钮
            ml 1337, 543, 200, 500//点击小的辉萤军势图标,重新获得快速旅行的按钮
            ml 1593, 994, 200, 500//点击快速旅行
            Call WW_laco()//判断加载完成游戏主界面
        Else 
            ml 1593, 994, 200, 500//点击快速旅行
            Call WW_laco()//判断加载完成游戏主界面
            Call space_boss_tp()//特殊处理的boss
        End If
    End If
End Sub
//传送需要做特殊处理的boss
Sub space_boss_tp()
    If WW_selcet_boss_ch_number = 9 and Form1.聚械机偶.Value = 1 and 聚械机偶声骇数量 <> CInt(Form1.聚械机偶1.Text) Then ////对机械做特殊处理
        wwrun 3000, 0
        重击 1000, 1000
        wwrun 2500,10000
    End If
    If WW_weekly_ch_number = 4 and Form1.鸣钟之龟.Value = 1 and 鸣钟之龟声骇数量 <> CInt(Form1.鸣钟之龟1.Text) Then//对龟做特殊处理 
        wwrun 2500, 14000//最少前进5秒龟才会开始苏醒,苏醒时间是14.3秒
    End If//加WW_weekly_ch_number是为了只有当前是鸣钟之龟才有这个操作
End Sub
//中枢信标选项传送加检测加载
Sub WW_selcet_rb()
    If WW_selcet_rbx() > 0 Then 
        ml WW_selcet_rbx, WW_selcet_rby, 200, 300
    End If
    ml WW_ftx, WW_fty, 200, 300//点击快速旅行
    Call WW_laco()//判断加载完成游戏主界面
End Sub
//检测地图缩放的加减和右上角的X
Function WW_map_cox()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","0|5|FFFFFF,0|10|FFFFFF,6|6|FBFBFA,-6|6|FCFCFC,-7|426|FFFFFF,1|426|FFFFFF,5|426|FFFFFF,-10|-257|CFFAFF,7|-257|CFFAFF,7|-242|CFFAFF,-8|-242|CFFAFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_map_cox = CInt(MyArray(0)): WW_map_coy = CInt(MyArray(1))
End Function
//检测"快速传送"(Fast Travel)(不包括借位信标的快速传送)
Function WW_ftx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","0|-8|FFFFFF,0|-21|FFFFFF,12|-19|FFFFFF,19|-15|FFFFFF,41|-20|FFFFFF,57|-17|FFFFFF,103|-10|FFFFFF,103|-5|FFFFFF,116|-30|000000,116|7|000000,-7|7|000000,-7|-29|000000",picture_color_similarity)	
    MyArray = Split(XY, "|")
    WW_ftx = CInt(MyArray(0)) : WW_fty = CInt(MyArray(1))
End Function
/*+++++传送信标图色+++++*/
//检测地表中枢信标Resonance Beacon(共振连结)(目前还没有地下的)
Function WW_rbx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFB90","0|4|FFFB90,0|9|FFFB90,-11|9|FFFB90,-11|5|FFFB90,-11|1|FFFB90,-12|-12|FFFFFF,-5|-12|FFFFFF,0|-12|FFFFFF,-5|-2|FFFFFF,-6|1|FFFFFF,-6|6|FFFFFF,-5|9|FFFFFF,-5|12|FFFFFF,-20|-11|FFFFFF,-27|5|FFFFFF,16|5|FFFFFF,10|-10|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_rbx = CInt(MyArray(0)) : WW_rby = CInt(MyArray(1))
End Function
//检测地表中枢信标选项(Resonance Beacon共振连结)(目前还没有地下的)
Function WW_selcet_rbx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFB90","5|0|FFFFFF,9|0|FFFB90,56|-2|D8E5EC,65|-2|D8E5EC,75|-2|D8E5EC,84|-1|D8E5EC,91|-1|D8E5EC,110|-1|D8E5EC,136|-1|D8E5EC,148|-10|D7E4EB",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_selcet_rbx = CInt(MyArray(0)) : WW_selcet_rby = CInt(MyArray(1))
End Function
//地下和地上的小型信标选项传送加检测加载(目前地下和地上的选项都是一样的图标)
Sub WW_up_tp()
    If WW_selcet_up_tpx() > 0 Then 
        ml WW_selcet_up_tpx, WW_selcet_up_tpy, 200, 300
    End If
    ml WW_ftx, WW_fty, 200, 300//点击快速旅行
    Call WW_laco()//判断加载完成游戏主界面
End Sub
//(地图初始大小)检测地表的小型信标
Function WW_up_tpx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","0|-1|FFFFFF,-1|-1|FFFFFF,-1|-2|FFFFFF,-1|0|FFFFFF,-2|-1|FFFFFF,-2|-2|FFFFFF,-3|-2|FFFFFF,-5|-3|FFFFFF,-6|0|FFFFFF,-12|0|FFFFFF,-6|-7|FFFFFF,-6|-11|FFFFFF,-6|-16|FAFD56,-6|-23|FAFD56,-6|-35|FAFD56,-6|-40|FFFFFF,0|-36|FFFFFF,-12|-36|FFFFFF,-12|-30|FFFFFF,-1|-30|FFFFFF,-1|-16|FFFFFF,-12|-16|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_up_tpx = CInt(MyArray(0)) : WW_up_tpy = CInt(MyArray(1))
End Function
//地表的小型信标选项检测
Function WW_selcet_up_tpx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","-8|0|FFFFFF,-3|-6|FFFFFF,-3|-13|FAFD56,-3|-19|FAFD56,-3|-28|FAFD56,-3|-33|FFFFFF,2|-28|FFFFFF,-8|-28|FFFFFF,-8|-13|FFFFFF,1|-13|FFFFFF,57|-14|D8E5EC,57|-22|D8E5EC,76|-27|D8E5EC,81|-27|D8E5EC,93|-23|D8E5EC,102|-16|D8E5EC,114|-18|D8E5EC,114|-22|CEDBE0,114|-26|D8E5EC,128|-19|D8E5EC,140|-16|D8E5EC",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_selcet_up_tpx = CInt(MyArray(0)): WW_selcet_up_tpy = CInt(MyArray(1))
End Function
//(地图初始大小)检测地下的小型信标(在第一层还是第二层都检测得到)
Function WW_do_tpx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"000000","7|4|000000,-8|5|000000,0|19|000000,8|15|000000,-9|15|000000,-19|0|FFFFFF,-19|-7|FAFE56,-19|-14|FAFD56,-19|-24|FAFD56,-14|-29|FFFFFF,-14|-8|FFFFFF,-24|-8|FFFFFF,-24|-24|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_do_tpx = CInt(MyArray(0)) : WW_do_tpy = CInt(MyArray(1))
End Function
//检测借位信标(Waypoint)目前地表和地下的图标都一样
Function WW_wpx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"F0F0F0","-1|6|313131,-4|5|313131,-5|2|313131,-14|-16|78DDFC,-14|-23|78DDFC,-14|-32|79DDFD,-14|-38|79DDFD,-8|-41|FDFDFD,-8|-34|FDFDFD,-8|-29|FCFCFC,-21|-29|FDFDFD,-21|-34|FDFDFD,-21|-40|FDFDFD,-20|-16|FCFCFC,-8|-16|FCFCFC",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_wpx = CInt(MyArray(0)) : WW_wpy = CInt(MyArray(1))
End Function
//借位信标选项检测
Function WW_selcet_wpx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"F6F6F6","-3|2|323232,-9|-7|FFFFFF,-5|-11|FFFFFF,-14|-12|FFFFFF,-10|-11|7BDFFF,-10|-17|7ADFFF,-10|-23|7ADFFF,-10|-27|7ADFFF,-5|-26|FFFFFF,-13|-26|FFFFFF,43|-19|D8E5EC,43|-13|D8E5EC,43|-9|D8E5EC,49|-8|D8E5EC,49|-11|D8E5EC,49|-14|D8E5EC,61|-14|D8E5EC,61|-11|D8E5EC,61|-8|D8E5EC,58|-25|D8E5EC,51|-25|D8E5EC,70|-21|D8E5EC,70|-14|D8E5EC,70|-7|D8E5EC,83|-6|D8E5EC,96|-16|D8E5EC,134|-15|D8E5EC,134|-10|D8E5EC",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_selcet_wpx = CInt(MyArray(0)): WW_selcet_wpy = CInt(MyArray(1))
End Function
/*+++++地图方向定位图色+++++*/
//地图方向指标中心点的检测(目前用不上)
Function map_direction_icon()
    FindCenterColor 107,104,151,147,"E4FDFF",map_direction_icon, map_direction_icon_y
End Function
/*=============索拉指南选择及判断检测=============*/
//检测前往的图标
Function WW_gotox(gotox1, gotoy1, gotox2, gotoy2)
    XY=Plugin.Color.FindMutiColor(gotox1, gotoy1, gotox2, gotoy2,"FFFFFF","7|0|FFFFFF,9|0|FFFFFF,9|10|FFFFFF,30|5|FFFFFF,30|10|FFFFFF,30|15|FFFFFF,42|9|000000,42|14|000000,42|4|000000",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_gotox = CInt(MyArray(0)): WW_gotoy = CInt(MyArray(1))
End Function
//索拉指南检测双倍的图标(y轴要向下移动49个像素点)
Function WW_double_scanx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"5890A1","0|28|5890A1,16|15|E2F2F8,33|14|E2F2F8,50|14|E2F2F8,63|20|E2F2F8,94|16|E2F2F8,115|16|E2F2F8,126|18|E2F2F8,139|18|E2F2F8,156|20|E2F2F8,173|19|E2F2F8,189|9|E2F2F8,228|6|E2F2F8,228|16|E2F2F8,244|18|E2F2F8,246|8|E2F2F8,260|7|DEEFF6,271|9|E2F2F8,271|19|E2F2F8",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_double_scanx = CInt(MyArray(0)): WW_double_scany = CInt(MyArray(1))
End Function
//检测战歌重奏没有挑战次数(周本)(Weekly  Challenge)
Function WW_weekly_chx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"D8E5EC","0|4|D8E5EC,0|14|D8E5EC,19|-2|D8E5EC,40|-2|D8E5EC,64|12|D8E5EC,96|12|D8E5EC,120|8|D8E5EC,141|16|D8E5EC,194|4|519FC1,194|8|519FC1,194|13|519FC1,205|11|519FC1,205|9|519FC1,205|5|519FC1,234|2|519FC1,235|13|519FC1",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_weekly_chx = CInt(MyArray(0)): WW_weekly_chy = CInt(MyArray(1))
End Function
//检测漂泊日志（Milestones)图标(暂时用不上)
Function WW_mix()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"BABABA","-8|0|BBBBBB,-13|0|BBBBBB,-13|-10|BBBBBB,-13|-23|BBBBBB,-8|-23|BBBBBB,0|-23|BABABA,0|-32|BBBBBB,-6|-29|BBBBBB,2|-35|BBBBBB,12|-35|BBBBBB,19|-35|BBBBBB,19|-29|BBBBBB,13|-29|BBBBBB,7|-29|BBBBBB,4|-17|BBBBBB,4|-12|BBBBBB,4|-6|BBBBBB,7|-10|BBBBBB,7|-14|BBBBBB",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_mix = CInt(MyArray(0)): WW_miy = CInt(MyArray(1))
End Function
//检测周期挑战(Recurring Challenges)图标(后面要用来当做偏移坐标)
Function WW_re_chx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"BBBBBB","-19|-16|BBBBBB,20|-16|BBBBBB,7|5|BBBBBB,-5|5|BBBBBB,-9|-24|BBBBBB,0|-24|BBBBBB,10|-24|BBBBBB",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_re_chx = CInt(MyArray(0)): WW_re_chy = CInt(MyArray(1))
End Function
//检测强者之路(Path of Growth)图标
Function WW_Path_of_Growthx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"BBBBBB","18|0|BBBBBB,18|10|BBBBBB,27|11|BBBBBB,27|11|BBBBBB,27|27|BBBBBB,22|33|BBBBBB,20|41|BBBBBB,10|41|BBBBBB,-7|41|BBBBBB,-14|25|BBBBBB,0|21|BBBBBB,-11|19|BBBBBB",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_Path_of_Growthx = CInt(MyArray(0)): WW_Path_of_Growthy = CInt(MyArray(1))
End Function
//检测残象探寻(Echo Hunting)图标(加强版)
Function WW_Ec_Hux()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"BBBBBB","0|-2|BBBBBB,0|-4|BBBBBB,0|-6|BBBBBB,8|-17|BBBBBB,6|-17|BBBBBB,4|-17|BBBBBB,3|-17|BBBBBB,1|-17|BBBBBB,0|-17|BBBBBB,-1|-17|BBBBBB,-3|-17|BBBBBB,-4|-17|BBBBBB,-5|-17|BBBBBB,-7|-17|BBBBBB,-15|-26|BBBBBB,-15|-35|BBBBBB,-7|-35|BBBBBB,7|-35|BBBBBB,15|-36|BBBBBB,15|-25|BBBBBB,1742|-531|CFFAFF,1742|-544|CFFAFF,1729|-544|CFFAFF,1728|-530|CFFAFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_Ec_Hux = CInt(MyArray(0)): WW_Ec_Huy = CInt(MyArray(1))
End Function
/*=============战斗和声骇拾取的图色及函数=============*/
//无音区等待白色确定按钮出现并点击(无音区点击领取后会出现一个获得声骇的界面和一个领取按钮)
Sub WW_write_confirm(WW_write_confirm_delay1, WW_write_confirm_delay2)
    Do Until WW_write_confirmx() > 0
        Delay 100
    Loop
    Delay 1000//防止太快点不到
    ml WW_write_confirmx(), WW_write_confirmy, WW_write_confirm_delay1, WW_write_confirm_delay2
End Sub
//检测启动索敌的图标(单点)0.7不稳定
Function lock_onx()
    FindColorEx 1497,961,1497,961," 2897A9",0,0.5, lock_onx, lock_ony
End Function
/*+++++4C的boss战斗相关图色+++++*/
//boss量血条(检测的是boss的LV字体,血条颜色会随等级变化)|周本boss死了后Lv还会短暂存在
Function WW_boss_appear()//无归boss没有任务提示,所以只能检测常态环境和boss的LV图标了
    XY=Plugin.Color.FindMutiColor(681,8,1244,54,"FFFFFF","-3|0|FFFFFF,-7|0|FFFFFF,-9|0|FFFFFF,-9|-3|FFFFFF,-9|-6|FFFFFF,-9|-8|FFFFFF,-9|-10|FFFFFF,-9|-11|FFFFFF,-9|-14|FFFFFF,21|-1|FFFFFF,10|-1|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_boss_appear = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function//放弃所有检测boss死亡的方案,理由是1.3版本的无归boss没有击杀任务提示
//boss量血条方案2(检测的是boss血条最后的像素部分位置)
Function WW_boss_hp_point()//无归boss没有任务提示
    FindColorEx 674,60,678,66,"45B2FD",1,picture_color_similarity,WW_boss_hp_point,intY
End Function
//鸣潮boss死亡检测的任务和终端图标(检测界面图标正常)
Function WW_任务和终端图标()
    XY=Plugin.Color.FindMutiColor(10,0,1860,256,"FFFFFF","-5|0|FFFFFF,-6|0|FFFFFF,-13|0|FFFFFF,-19|0|FFFFFF,-21|0|FFFFFF,-21|-3|FFFFFF,-21|-5|FFFFFF,-21|-9|FFFFFF,-21|-13|FFFFFF,-21|-17|FFFFFF,-21|-18|FFFFFF,-21|-23|FFFFFF,-21|-27|FFFFFF,-21|-31|FFFFFF,-20|-33|FFFFFF,-18|-34|FFFFFF,-15|-34|FFFFFF,-11|-34|FFFFFF,-8|-34|FEFEFE,-8|-33|FEFEFE,1795|-192|FFFFFF,1795|-194|FFFFFF,1795|-197|FFFFFF,1791|-195|FFFFFF,1798|-195|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_任务和终端图标 = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function
/*+++++无音区战斗相关图色+++++*/
//等待计时器出现(即为等待怪物出现)
Sub WW_timer()
    Do Until WW_timerx() > 0
        Delay 100
    Loop
End Sub
//鸣潮计时器（无音区、塔等）
Function WW_timerx()
    XY=Plugin.Color.FindMutiColor(871,124,1056,171,"FFFFFF","0|1|FFFFFF,0|4|FFFFFF,0|7|FFFFFF,3|7|FFFFFF,6|7|FFFFFF,7|7|FFFFFF,69|16|FFFFFF,69|5|FFFFFF,116|4|FFFFFF,116|16|FFFFFF",0.9)
    MyArray = Split(XY, "|")
    WW_timerx = CInt(MyArray(0)): WW_timery = CInt(MyArray(1))
End Function
//挑战成功的图标(无影区的，不知道能不能迁移)目前是检测多波次击杀怪的关键点
Function challenge_complete()
    XY=Plugin.Color.FindMutiColor(860,255,1062,314,"DCF8FF","0|-14|DCF8FF,16|0|DCF8FF,27|-1|DCF8FF,50|-2|DCF8FF,51|-13|DCF8FF,70|-9|DCF8FF,72|8|DCF8FF,95|10|DCF8FF,95|-5|DCF8FF,115|-13|DCF8FF,114|-4|DCF8FF,141|-5|DCF8FF,161|-14|DCF8FF,164|7|DCF8FF",0.9)
    MyArray = Split(XY, "|")
    challenge_complete = CInt(MyArray(0)): Y = CInt(MyArray(1))	
End Function
//无音区清理任务图标(开启无音区后的图标,字体是清理无音区中涌现的残象)
Function WW_mission_enemy()
    XY=Plugin.Color.FindMutiColor(0,259,462,1080,"FFFFFF","-1|-2|FFFFFF,-3|-3|FFFFFF,-3|-6|FFFFFF,-5|-5|FFFFFF,-7|-4|FFFFFF,-7|-6|FFFFFF,-6|-8|FFFFFF,28|-1|FFFFFF,28|-11|FFFFFF,28|-18|FFFFFF,48|-11|FFFFFF,42|-11|FFFFFF,36|-11|FFFFFF,40|-4|FFFFFF,70|-18|FFFFFF,70|-13|FFFFFF,70|-8|FFFFFF,70|-3|FFFFFF,70|3|FFFFFF,94|-9|FFFFFF,94|-18|FFFFFF,123|-18|FFFFFF,123|-3|FFFFFF,154|-7|FFFFFF",0.9)
    MyArray = Split(XY, "|")
    WW_mission_enemy = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function
//选择无音区的图标(tacet field)
Function select_tfx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","-1|0|FFFFFF,-1|4|FFFFFF,18|6|F6F6F6,18|3|F6F6F6,18|-1|F6F6F6,-19|-2|F6F6F6,-19|1|F6F6F6,-19|4|F6F6F6,-19|5|F6F6F6",0.9)
    MyArray = Split(XY, "|")
    select_tfx = CInt(MyArray(0)): select_tfy = CInt(MyArray(1))	
End Function
/*+++++检测死亡复活图色+++++*/
//检测3个角色血条都在
Function roles_nodie()//检测右边中间3个角色的第一个血条值
    //检测UID加3个角色的颜色
    //XY=Plugin.Color.FindMutiColor(1748,206,1920,1080,"D9DADC","0|132|D9DBDD,0|264|D9DBDD,-22|776|FFFFFF,-22|781|FFFFFF,8|779|FFFFFF",0.9)
    //仅仅检测3个角色的血条像素点
    XY=Plugin.Color.FindMutiColor(1748,206,1919,865,"D9DADC","0|132|D9DBDD,0|264|D9DBDD",0.9)
    MyArray = Split(XY, "|")
    roles_nodie = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function
//检测全员死亡(复活按钮)
Function alldiex()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"EBEBEB","28|0|EDEDED,56|0|EDEDED,7|-9|313131,11|-11|262626,17|-11|262626,8|-4|262626,22|-4|262626,21|4|262626,10|3|272727,15|7|262626,31|-10|262626,36|-10|262626,40|-10|262626,45|-10|262626,49|-10|262626,47|2|262626,38|2|262626,42|9|262626,16|-4|262626,42|5|EDEDED,42|1|EDEDED",picture_color_similarity)
    MyArray = Split(XY, "|")
    alldiex = CInt(MyArray(0)): alldiey = CInt(MyArray(1))
End Function
//副本内的全员死亡(检测挑战失败的图标)
Function alldie2()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"8680F0","0|-9|8680F0,0|-13|8680F0,0|-18|8680F0,0|-24|8680F0,0|-28|8680F0,0|-34|8680F0,0|-41|8680F0,20|-40|8680F0,20|-36|8680F0,20|-32|8680F0,20|-27|8680F0,20|-23|8680F0,20|-19|8680F0,29|-4|8680F0,29|-10|8680F0,29|-17|8680F0,29|-21|8680F0,29|-26|8680F0,29|-30|8680F0,29|-35|8680F0,29|-40|8680F0,49|-2|8680F0,57|-2|8680F0,66|-2|8680F0,66|-10|8680F0,66|-14|8680F0,49|-18|8680F0,49|-12|8680F0,57|-22|8680F0,57|-27|8680F0,57|-32|8680F0,57|-36|8680F0,57|-40|8680F0,79|-40|8680F0,79|-28|8680F0,81|-10|8680F0,124|-18|8680F0,124|-33|8680F0,163|-26|8680F0,195|-36|8680F0,180|-29|8680F0,188|-11|8680F0",picture_color_similarity)
    MyArray = Split(XY, "|")
    alldie2 = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function
//检测复活药界面
Function re_winx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"4D6672","0|-14|4D6672,-14|-14|4D6672,-13|-1|4D6672,-237|546|000000,-237|566|000000,-206|570|000000,-176|566|000000,-176|541|000000,-229|545|FFFFFF,-231|553|FFFFFF,-231|558|FFFFFF,-225|558|FEFEFE,-225|555|FEFEFE,-221|555|FFFFFF,-216|555|FFFFFF,-209|555|FFFFFF,-209|561|FFFFFF,-215|561|FFFFFF,-221|561|FFFFFF,-199|561|FFFFFF,-191|566|FFFFFF,-182|567|FFFFFF,-182|559|F8F8F8,-190|559|FFFFFF,-190|552|FFFFFF,-180|549|FFFFFF,-201|549|FFFFFF,-191|546|FFFFFF,-191|544|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    re_winx = CInt(MyArray(0)): re_winy = CInt(MyArray(1))
End Function
/*+++++副本相关的界面按钮+++++*/
//检测单人挑战按钮(除了周本,这个是短条的)
Function WW_Solo_Challengex()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"E3E3E3","0|9|E3E3E3,0|15|E4E3E3,0|23|C8C8C8,7|23|262626,7|14|262626,7|7|262626,7|4|262626,18|3|262626,18|8|262626,18|17|262626,23|4|262626,23|11|262626,23|23|262626,32|23|3F3F3F,33|17|262626,42|17|262626,42|23|262626,38|23|262626,38|12|262626,38|6|262626,38|3|262626,42|7|262626,49|3|262626,49|9|262626,51|19|262626,54|25|262626",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_Solo_Challengex = CInt(MyArray(0)): WW_Solo_Challengey = CInt(MyArray(1))
End Function
//检测单人挑战按钮(这个是周本的,这个是条的)
Function WW_week_challenge_Solo_Challengex()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"E4E4E4","7|0|262626,16|0|262626,23|0|262626,23|-8|262626,23|10|262626,29|10|272727,33|10|262626,33|5|262626,33|2|262626,35|2|262626,40|2|262626,40|6|656565,42|6|262626,42|10|262626,50|9|262626,50|6|262626,50|-2|262626,50|-8|262626,50|-10|262626,61|-10|E3E3E3,61|-7|E4E4E4,61|4|E4E4E4,61|14|E4E4E4,265|16|E4E4E4,266|-3|E3E3E3,256|-21|E3E3E3,187|-12|E3E3E3,157|12|E4E4E4,97|-2|E4E4E4",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_week_challenge_Solo_Challengex = CInt(MyArray(0)): WW_week_challenge_Solo_Challengey = CInt(MyArray(1))
End Function
//检测开始挑战按钮
Function WW_Start_Challengex()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"E5E6E7","0|-17|E5E6E7,0|-27|E5E6E7,7|-24|262626,7|-14|262626,7|-5|262626,17|-5|2B2B2B,18|-10|262626,18|-16|262626,18|-23|262626,23|-23|262626,23|-16|262626,23|-7|262626,25|-2|393939,34|-2|262626,34|-11|262626,38|-14|262626,38|-20|262626,38|-24|262626,43|-20|262626,43|-11|262626,43|-4|262626,43|-8|262626,50|-24|262626,50|-19|262626,51|-6|262626,56|-1|262626",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_Start_Challengex = CInt(MyArray(0)): WW_Start_Challengey = CInt(MyArray(1))
End Function
/*=============F交互按钮图标=============*/
//通用F检测(目前知道只要有互动都可以检测到)
Function WW_f_scanx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"D9E5EC","0|-6|D9E5EC,0|-12|D9E5EC,0|-17|D9E5EC,0|-22|D9E5EC,0|-27|D9E5EC,0|-32|D9E5EC,0|-36|D9E5EC,0|-41|D9E5EC,0|-44|D9E5EC,21|-24|FFFFFF,21|-20|FFFFFF,21|-15|FFFFFF,33|-12|FFFFFF,33|-28|FFFFFF,42|-20|FFFFFF,25|-20|FFFFFF,46|-24|FFFFFF,46|-20|FFFFFF,46|-15|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_f_scanx = CInt(MyArray(0)): WW_f_scany = CInt(MyArray(1))
End Function
/*=============声骇拾取相关图色=============*/
//声骇拾取图标检测(副本有可能出现在右边)
Function WW_echoes_absorb_scan()
    XY=Plugin.Color.FindMutiColor(480,523,1440,585,"FDF8F6","4|4|3E3E3E,4|0|3D3D3D,4|-5|3D3D3D,15|-5|FEFAF7,15|0|FAF5F3,15|5|F3EEEC,86|5|FFFFFF,86|-6|FFFFFF,159|3|D8E5EC,151|-6|D8E5EC,151|0|D8E5EC,151|5|D8E5EC,146|0|D8E5EC,146|-4|D8E5EC,125|-6|D8E5EC,125|-2|D8E5EC,125|3|D8E5EC",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_echoes_absorb_scan = CInt(MyArray(0)): WW_echoes_absorb_f_scan_y = CInt(MyArray(1))
End Function
/*=============体力使用相关图色=============*/
//提示界面(Note)检测提示的字体和退出图标
Function Note_interface()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"101010","3|0|0D0D0D,4|-3|000000,4|-8|000000,4|-13|000000,4|-17|000000,4|-22|000000,4|-26|000000,25|-27|000000,20|-27|000000,14|-27|000000,11|-27|060606,12|-24|000000,12|-19|000000,13|-18|000000,18|-18|000000,24|-18|000000,24|-22|000000,20|-22|000000,17|-22|000000,10|-13|000000,15|-13|000000,18|-13|000000,22|-13|000000,27|-13|000000,19|-9|000000,19|-8|000000,25|-7|000000,18|-3|000000,26|-1|000000,21|-1|000000,12|-5|000000,12|-8|000000,9|-2|000000,41|-1|000000,45|-1|000000,47|-4|000000,46|-8|000000,46|-12|000000,46|-16|000000,46|-17|000000,51|-17|000000,57|-17|000000,41|-17|000000,36|-17|000000,34|-6|000000,36|-8|000000,38|-11|000000,54|-11|000000,57|-9|010101,58|-6|000000,56|-25|000000,51|-25|000000,48|-25|000000,43|-25|000000,38|-25|000000,36|-25|000000,988|-15|4D6672,987|-29|4D6672,1002|-29|4D6672,1002|-14|4D6672",picture_color_similarity)
    MyArray = Split(XY, "|")
    Note_interface = CInt(MyArray(0)): WW_no_waveplate_interface_y = CInt(MyArray(1))
End Function
//领取奖励界面(Claim Rewards)检测领取奖励的字体和退出图标
Function Claim_Rewards_interface()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"000000","-3|-3|000000,-6|-5|030303,1|-12|000000,-2|-12|050505,-7|-12|050505,-7|-19|000000,-2|-24|000000,0|-22|000000,6|-25|000000,12|-25|000000,18|-25|000000,18|-18|000000,12|-18|151515,6|-18|000000,6|-13|000000,6|-8|000000,18|-8|000000,18|-12|000000,12|-14|000000,12|-10|000000,12|-6|000000,8|-1|000000,17|-1|000000,27|-6|000000,27|-16|000000,27|-25|000000,31|-25|000000,36|-25|000000,36|-16|000000,36|-6|000000,46|-8|000000,42|-24|000000,46|-24|000000,50|-24|000000,65|-25|000000,65|-19|000000,65|-15|000000,74|-24|000000,77|-24|000000,81|-24|000000,83|-7|000000,70|-7|000000,60|-7|000000,90|-7|000000,90|-12|000000,90|-24|000000,97|-24|0A0A0A,102|-24|0A0A0A,102|-19|000000,96|-19|000000,96|-11|000000,95|-6|000000,102|-12|000000,102|-8|000000,102|-4|000000,107|-5|000000,109|-14|000000,109|-21|000000,109|-26|000000,116|-20|000000,115|-13|000000,115|-7|000000,115|-1|000000,980|-12|4D6672,980|-25|4D6672,993|-25|4D6672,993|-12|4D6672",picture_color_similarity)
    MyArray = Split(XY, "|")
    Claim_Rewards_interface = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function
//提示补充结晶波片的界面
Function Replenish_Waveplate_interface()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"000000","0|-2|000000,0|-3|000000,0|-5|000000,0|-6|000000,0|-9|000000,0|-13|000000,0|-21|000000,0|-24|000000,11|-23|000000,11|-21|000000,11|-17|000000,11|-14|000000,11|-10|000000,11|-6|000000,11|-2|000000,11|0|000000,1155|-22|4D6672,1170|-22|4D6672,1170|-8|4D6672,1155|-8|4D6672,488|94|626A6E,488|89|626A6E,487|82|626A6E,487|81|626A6E,487|76|626A6E,500|76|626A6E,500|80|626A6E,495|89|626A6E,495|92|626A6E,495|97|626A6E,495|99|909598,507|95|626A6E,507|91|626A6E,507|88|626A6E,517|85|626A6E,517|88|626A6E,517|92|626A6E,531|98|626A6E,534|98|626A6E,535|98|626A6E,546|97|626A6E,546|93|626A6E,546|88|626A6E,546|86|626A6E,546|85|626A6E,546|81|626A6E,546|75|626A6E,557|75|626A6E,562|75|626A6E,564|75|626A6E,559|81|626A6E,559|87|626A6E,559|92|626A6E,559|96|626A6E,577|96|626A6E,577|92|626A6E,577|87|626A6E,577|85|626A6E,577|76|626A6E,587|74|626A6E,587|79|626A6E,587|84|626A6E,587|88|626A6E,587|92|626A6E,587|93|626A6E,587|96|626A6E,608|86|626A6E,608|91|626A6E,617|86|626A6E,617|91|626A6E,617|96|626A6E,621|97|676E72,624|76|626A6E,614|76|626A6E,609|76|626A6E,602|76|626A6E,654|77|626A6E,644|77|626A6E,634|77|626A6E,638|78|626A6E,638|85|626A6E,646|85|626A6E,651|94|626A6E,666|94|626A6E,666|90|626A6E,666|85|626A6E,664|78|626A6E,669|78|626A6E,677|78|626A6E",picture_color_similarity)
    MyArray = Split(XY, "|")
    Replenish_Waveplate_interface = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function
//boss领取图标(60体力周本也是这个)
Function rewards_bossx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","0|6|FFFFFF,6|6|FFFFFF,6|2|FFFFFF,6|-2|FFFFFF,23|-2|FFFFFF,32|0|FFFFFF,44|-3|FFFFFF,44|-5|FFFFFF,-427|-152|517E8C,-416|-152|517E8C,-416|-151|517E8C,-409|-153|517E8C,-409|-157|517E8C,-397|-157|517E8C,-397|-152|517E8C,-397|-150|517E8C,-4|-147|4A545B",0.9)
    MyArray = Split(XY, "|")
    rewards_bossx = CInt(MyArray(0)): rewards_bossy = CInt(MyArray(1))
End Function
//普通副本40体力领取图标
Function rewards_40x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","0|3|FFFFFF,0|10|FFFFFF,0|13|FFFFFF,3|13|FFFFFF,-3|13|FFFFFF,-8|13|FFFFFF,0|15|FFFFFF,8|10|FFFFFF,8|5|FFFFFF,18|4|FFFFFF,18|7|FFFFFF,18|11|FFFFFF,-31|4|F4F5E3,-45|4|8D8E2C,-35|-8|616227,-35|16|969821,101|3|FFFFFF,101|9|FFFFFF,101|14|FFFFFF,101|17|FFFFFF",0.9)
    MyArray = Split(XY, "|")
    rewards_40x = CInt(MyArray(0)): rewards_40y = CInt(MyArray(1))	
End Function
//普通副本80体力领取图标,即双倍领取
Function rewards_80x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","-4|-4|FFFFFF,-7|-6|FFFFFF,-11|-10|FFFFFF,5|-7|FFFFFF,5|-2|FFFFFF,15|-2|FFFFFF,15|-7|FFFFFF,-36|-8|F3F5DF,-35|-16|A2AB56,-35|7|797830,-27|-3|888D25,-49|-7|B0BC76,92|-3|FFFFFF,103|-1|FFFFFF",0.9)
    MyArray = Split(XY, "|")
    rewards_80x = CInt(MyArray(0)):rewards_80y = CInt(MyArray(1))
End Function
//无音区60体力领取图标
Function rewards_60x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","10|3|FFFFFF,16|-1|FFFFFF,26|-1|FFFFFF,-25|13|64683F,-16|-10|B1BB82,-26|-6|F2F5E5,-36|-4|858523,-16|-1|E2E27E",0.9)
    MyArray = Split(XY, "|")
    rewards_60x = CInt(MyArray(0)): rewards_60y = CInt(MyArray(1))
End Function
//无音区120体力领取图标,即双倍领取
Function rewards_120x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FFFFFF","0|11|FFFFFF,20|14|FFFFFF,15|14|FFFFFF,20|1|FFFFFF,38|5|FFFFFF,28|5|FFFFFF,-27|-1|EAEB99,-24|13|A2A537,-35|4|F3F3A9,-25|4|F0F4CF,-21|-5|D3DDC4",0.9)
    MyArray = Split(XY, "|")
    rewards_120x = CInt(MyArray(0)): rewards_120y = CInt(MyArray(1))
End Function
//无音区领取奖励后出现的白色确定按钮
Function WW_write_confirmx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"E4E4E4","0|6|E4E4E4,14|6|262626,14|0|262626,24|-9|262626,3|-7|262626,14|-1|262626,14|5|262626,14|11|262626,-27|10|262626,-27|3|262626,-27|-3|262626,-24|-10|262626",0.9)
    MyArray = Split(XY, "|")
    WW_write_confirmx = CInt(MyArray(0)): WW_write_confirmy = CInt(MyArray(1))
End Function
//补充方式默认选中为结晶单质
Function Replenish_typeon_1x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"B1E3A8","0|-34|89D386,0|24|A5E0A4,46|24|EFE7EC,24|-8|88D08A,-26|-8|B8EDDD",0.9)
    MyArray = Split(XY, "|")
    Replenish_typeon_1x = CInt(MyArray(0)): Replenish_typeon_1y = CInt(MyArray(1))	
End Function
//补充方式默认选中为结晶溶剂
Function Replenish_typeon_2x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"97ECF5","0|-30|2A8EA2,0|30|91AAD0,20|3|86C4E1,-27|3|328293",0.9)
    MyArray = Split(XY, "|")
    Replenish_typeon_2x = CInt(MyArray(0)): Replenish_typeon_2y = CInt(MyArray(1))	
End Function
//补充方式默认选中为星声
Function Replenish_typeon_3x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FCFDF3","0|-30|AB8C48,0|23|ECEADE,31|-4|3F4141,-33|-4|4B4B47",0.9)
    MyArray = Split(XY, "|")
    Replenish_typeon_3x = CInt(MyArray(0)): Replenish_typeon_3y = CInt(MyArray(1))	
End Function
/*=============日常领取界面图色及函数=============*/
//鸣潮月卡(测试了一个周期)
Function WW_mcx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"0DA7D4","-40|35|208CB3,151|156|188BB5,542|61|0E87AB,493|29|69E6F7,471|96|FDFFFF,471|115|FDFFFF,471|128|FDFFFF,471|140|FDFFFF,537|210|FDFFFF,537|201|FDFFFF,537|194|FDFFFF,439|122|7AB2D7,431|138|7DB3D5,163|88|77B0D7,137|64|76B1D7,137|48|76B1D7,147|35|75B0D7",picture_color_similarity)
    MyArray = Split(XY, "|")
    WW_mcx = CInt(MyArray(0)): WW_mcy = CInt(MyArray(1))
End Function
//兑换领取图色(兑换失败)
Function CDK_fail()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"6C6CD9","11|3|6C6CD9,31|3|6C6CD9,50|-1|6C6CD9,72|-2|6C6CD9,103|-2|6C6CD9,105|-2|6C6CD9,155|1|6C6CD9,167|1|6C6CD9,682|4|6C6CD9,688|4|6C6CD9,740|4|6C6CD9,777|1|6C6CD9,825|0|6C6CD9,866|0|6C6CD9,889|0|6C6CD9,913|2|6C6CD9,930|-1|6C6CD9",0.9)
    MyArray = Split(XY, "|")
    CDK_fail = CInt(MyArray(0)): Y = CInt(MyArray(1))
End Function
//检测活跃度宝箱的金色条像素点(输入点位、封装成单点找色)
Function activity_rewardx(activity_rewardx1, activity_rewardy1)
    FindCenterColor activity_rewardx1, activity_rewardy1, activity_rewardx1, activity_rewardy1,"ABEAF3",activity_rewardx, activity_rewardy
End Function
//检测活跃度宝箱的领取后的颜色(输入点位、封装成单点找色)
Function activity_rewardedx(activity_rewardedx1, activity_rewardedy1)
    FindColorEx activity_rewardedx1, activity_rewardedy1, activity_rewardedx1, activity_rewardedy1,"CFF7FF",1,picture_color_similarity,activity_rewardedx, activity_rewardedy
End Function
//+++++先约电台图色+++++*/
//先约电台选中且有感叹号的图标
Function pioneer_podcastx1()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"90ECFB","4|3|90ECFB,6|4|90ECFB,5|32|90ECFB,4|34|90ECFB,1|36|90ECFB,32|9|4022A1,31|9|4022A2,23|9|3F23A0,21|9|3F229F",0.9)
    MyArray = Split(XY, "|")
    pioneer_podcastx1 = CInt(MyArray(0)): pioneer_podcasty1 = CInt(MyArray(1))
End Function
//先约电台未选中的图标
Function pioneer_podcastx2()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"BBBBBB","-2|2|BBBBBB,3|-3|BBBBBB,3|-26|BBBBBB,3|-29|BBBBBB,1|-29|BBBBBB,-1|-31|BBBBBB,-3|-32|BBBBBB,-24|-32|BBBBBB",0.9)
    MyArray = Split(XY, "|")
    pioneer_podcastx2 = CInt(MyArray(0)): pioneer_podcasty2 = CInt(MyArray(1))
End Function
//检测电台任务红色感叹号提示
Function pioneer_tasksx()
    XY=Plugin.Color.FindMutiColor(37,288,136,354,"BBBBBB","16|-15|BBBBBB,13|-16|BBBBBB,18|-13|BBBBBB,29|21|BBBBBB,56|-6|4123A3,47|-6|4023A2,45|-7|3F23A0,56|-7|4023A2",0.9)
    MyArray = Split(XY, "|")
    pioneer_tasksx = CInt(MyArray(0)): pioneer_tasksy = CInt(MyArray(1))
End Function
/*=============以前的战斗图色及函数=============*/
//今汐E1检测
Function jxE1x()
    XY=Plugin.Color.FindMutiColor(1450,925,1853,1010,"FFFFFF","-9|9|FFFFFF,16|16|FFFFFF,6|25|FFFFFF,-40|41|FFFFFF,-40|26|FFFFFF,-40|32|FFFFFF,-12|55|FFFFFF,-17|56|FFFFFF,-22|55|FFFFFF,-20|26|FFFFFF,-9|33|FFFFFF,3|21|FFFFFF,2|20|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    jxE1x = CInt(MyArray(0)): jxE1y = CInt(MyArray(1))
End Function
//今汐E2检测
Function jxE2x()
    XY=Plugin.Color.FindMutiColor(1450,925,1853,1010,"D6FFFF","-20|12|FFFFFF,-12|15|FFFFFF,-29|46|FFFFFF,-15|45|FFFFFF,-9|43|FFFFFF,-5|42|FFFFFF,-7|32|FFFFFF,-25|32|FFFFFF,-6|42|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    jxE2x = CInt(MyArray(0)): jxE2y = CInt(MyArray(1))
End Function
//今汐E3检测
Function jxE3x()
    XY=Plugin.Color.FindMutiColor(1450,925,1853,1010,"FFFFFF","-17|1|FFFFFF,-25|9|FFFFFF,-12|17|FFFFFF,-23|22|FFFFFF,-14|30|FFFFFF,-8|35|FFFFFF,-7|46|FFFFFF,-14|58|FFFFFF,-14|61|FFFFFF,6|35|FFFFFF,-2|51|FFFFFF,-4|59|FFFFFF,-29|55|FFFFFF,-24|57|FFFFFF,-30|50|FFFFFF,-33|44|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    jxE3x = CInt(MyArray(0)) : jxE3y = CInt(MyArray(1))
End Function 
//今汐E4检测
Function jxE4x()//不确定多线程是不是要减低相似度
    XY=Plugin.Color.FindMutiColor(1450,925,1853,1010,"FFFFFF","16|-2|FFFFFF,21|2|FFFFFF,9|5|FFFFFF,10|27|FFFFFF,22|23|FFFFFF,12|35|FFFFFF,20|31|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    jxE4x = CInt(MyArray(0)) : jxE4y = CInt(MyArray(1))
End Function
//今汐Q技能检测
Function jxQx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FEFAF7","14|0|FEFAF7,14|12|F6F2F0,1|12|F7F3F0,3|5|3B3A3A,12|5|414141,8|-20|FFFFFF,8|-25|FFFFFF,8|-31|FFFFFF,8|-37|FFFFFF,8|-41|FFFFFF,18|-49|FFFFFF,-2|-49|FFFFFF,-7|-57|FFFFFF,22|-57|FFFFFF,30|-57|FFFFFF,-10|-38|FFFFFF,25|-38|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    jxQx = CInt(MyArray(0)): jxQy = CInt(MyArray(1))
End Function
//检测CD好了的鸣钟之龟
Function wlnQx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FAF6F3","0|-3|9C9A98,-4|-8|3B3B3B,0|-8|FEFAF7,5|-8|414141,7|-8|F0EEEC,0|-14|474747,-16|-49|FFFFFF,17|-49|FFFFFF,11|-64|FFFFFF,-13|-64|FFFFFF,1|-56|FFFFFF,1|-60|FFFFFF,-2|-83|FFFFFF,1|-77|FFFFFF,18|-73|FFFFFF,17|-70|FFFFFF,7|-58|FFFFFF,-8|-58|FFFFFF,-20|-42|FFFFFF,21|-42|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    wlnQx = CInt(MyArray(0)): wlnQy = CInt(MyArray(1))
End Function
//检测维里奈的e技能
Function wlnEx()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"FAF6F3","-2|-4|3E3E3E,-2|-7|404040,-2|-12|3F3F3F,12|-42|FFFFFF,-14|-43|FFFFFF,6|-51|FFFFFF,8|-54|FFFFFF,9|-58|FFFFFF,-1|-65|FFFFFF,0|-71|FFFFFF,1|-75|FFFFFF,-12|-75|FFFFFF,14|-76|FFFFFF",picture_color_similarity)
    MyArray = Split(XY, "|")
    wlnEx = CInt(MyArray(0)): wlnEx = CInt(MyArray(1))	
End Function
//维里奈的第一个共鸣能能量
Function wln_wengergy_x()
    XY=Plugin.Color.FindMutiColor(0,0,1920,1080,"72F2FF","7|0|74F6FF,20|0|76FAFF,27|0|74F7FF,34|0|74F6FF,41|0|73F4FF,47|0|72F3FF,54|0|71F1FF",0.8)
    MyArray = Split(XY, "|")
    wln_wengergy_x = CInt(MyArray(0)): wln_wengergy_y = CInt(MyArray(1))	
End Function
/*======鸣潮常用鼠标按键函数封装======*/
//移动延迟点击延迟
Sub ml(x, y, move_delay, leftclick_delay)
    MoveTo x, y
    Delay move_delay
    LeftClick 1
    Delay leftclick_delay
End Sub
//esc加延迟
Sub esc(delay_esc)
    KeyPress 27, 1
    Delay delay_esc
End Sub
//左击连点后加延迟
Sub lc(lctimes, lc_delay)
    For lctimes
        LeftClick 1
        Delay lc_delay
    Next
End Sub
//重击加延迟(Charged Attack)
Sub 重击(重击_时间, delay_重击)
    LeftDown 1
    Delay 重击_时间
    LeftUp 1
    Delay delay_重击
End Sub
//视角回正(carmer restore aut)中键加延迟
Sub mc(delay_MiddleClick)
    MiddleClick 1
    Delay delay_MiddleClick
End Sub
//w移动加延迟
Sub w(times, delay_w)
    KeyDown Move_forward, 1
    Delay times
    KeyUp Move_forward, 1
    Delay delay_w
End Sub
//a移动加延迟
Sub a(times, delay_a)
    KeyDown Move_left, 1
    Delay times
    KeyUp Move_left, 1 
    Delay delay_a
End Sub
//d移动加延迟
Sub d(times, delay_d)
    KeyDown Move_right, 1
    Delay times
    KeyUp Move_right, 1
    Delay delay_d
End Sub
//s移动加延迟
Sub s(times, delay_s)
    KeyDown Move_backward, 1
    Delay times
    KeyUp Move_backward, 1
    Delay delay_s
End Sub
//w加视角转移
Sub wm(times)
    KeyDown Move_forward, 1
    Delay times
    KeyUp Move_forward, 1
    MiddleClick 1
    Delay 1000
End Sub
//a加视角转移
Sub am(times)
    KeyDown Move_left, 1
    Delay times
    KeyUp Move_left, 1
    MiddleClick 1 
    Delay 1000
End Sub
//d加视角转移
Sub dm(times)
    KeyDown Move_right, 1
    Delay times
    KeyUp Move_right, 1
    MiddleClick 1
    Delay 1000
End Sub
//s加视角转移
Sub sm(times)
    KeyDown Move_backward, 1
    Delay times
    KeyUp Move_backward, 1
    MiddleClick 1
    Delay 1000
End Sub
//鸣潮w方向奔跑加延迟
Sub wwrun(wwrun_time, wwrun_delay)
    KeyDown Move_forward, 1
    RightDown 1
    Delay wwrun_time
    KeyUp Move_forward, 1
    RightUp 1
    Delay wwrun_delay
End Sub
//鸣潮a方向奔跑加延迟
Sub warun(warun_time, warun_delay)
    KeyDown Move_right, 1
    RightDown 1
    Delay warun_time
    KeyUp Move_right, 1
    RightUp 1
    Delay warun_delay
End Sub
//鸣潮d方向奔跑加延迟
Sub wdrun(wdrun_time, wdrun_delay)
    KeyDown  Move_left, 1
    RightDown 1
    Delay wdrun_time
    KeyUp  Move_left, 1
    RightUp 1
    Delay wdrun_delay
End Sub
//鸣潮s方向奔跑加延迟
Sub wsrun(wsrun_time, wsrun_delay)
    KeyDown Move_backward, 1
    RightDown 1
    Delay wsrun_time
    KeyUp Move_backward, 1
    RightUp 1
    Delay wsrun_delay
End Sub
//走跑切换
Sub ctrl(ctrl_delay)
    KeyPress Walk_or_Run, 1
    Delay ctrl_delay
End Sub
//冲刺或闪避
Sub shift(shift_delay)
    KeyPress Dash_or_Dodge, 1
    Delay shift_delay	
End Sub
//点击e加延迟
Sub e(delay_e)
    KeyPress Resonance_Skill, 1
    Delay delay_e
End Sub
//长按e加延迟
Sub longe(presstime, delay_longe)
    KeyDown Resonance_Skill, 1
    Delay presstime
    KeyUp Resonance_Skill, 1
    Delay delay_longe
End Sub
//长按e移动加延迟（原神按住元素战技加扫描）
Sub longemove(presstime, movetimes, movex, longemove_delay)
    KeyDown Resonance_Skill, 1
    Delay presstime//247是草神开长E的极限
    SetSimMode 2
    For movetimes//5
        MoveR movex, 0//784, 0
        Delay 10
    Next       
    SetSimMode 0
    KeyUp Resonance_Skill, 1
    Delay longemove_delay
End Sub
//点击r加延迟
Sub r(delay_r)
    KeyPress Resonance_Liberation, 1
    Delay delay_r
End Sub
//t(探索工具:点一下钩锁的情形)
Sub t(t_delay)
    KeyPress Use_Utility, 1
    Delay t_delay
End Sub
//模块轮盘//探索模块轮盘
Sub tab(tab_delay)
    KeyPress Utility_Wheel, 1
    Delay tab_delay
End Sub
//点击q加延迟
Sub q(delay_q)
    KeyPress Echo_Skill, 1
    Delay delay_q
End Sub
//切换瞄准//切换瞄准模式
Sub g(delay_g)
    KeyPress Switch_to_Aim_Mode, 1
    Delay delay_g
End Sub
//跳跃（按空格）加延迟,铁道没有跳跃按键
Sub space(delay_space)
    KeyPress Jump, 1
    Delay delay_space
End Sub
//攀爬时落下
Sub x(delay_x)
    KeyPress Drop_Down_when_Climbing, 1
    Delay delay_x
End Sub
//点F加延迟(拾取交互)
Sub f(delay_f)
    KeyPress Pick_Up_or_Interact, 1
    Delay delay_f
End Sub
//切角色1
Sub ch1()
    KeyPress Switch_to_Team_Member_1, 1
End Sub
//切角色2
Sub ch2()
    KeyPress Switch_to_Team_Member_2, 1
End Sub
//切角色3
Sub ch3()
    KeyPress Switch_to_Team_Member_3, 1
End Sub
//切角色4
Sub ch4()
    KeyPress Switch_to_Team_Member_4, 1
End Sub
//任务追踪
Sub v(delay_v)
    KeyPress Track_Quest, 1
    Delay delay_v
End Sub
//中断挑战
Sub p(delay_p)
    KeyPress Quit_Challenge, 1
    Delay delay_p
End Sub
//功能入口轮盘
Sub capsLock(delay_capsLock)
    KeyPress Quick_Access_Wheel, 1
    Delay delay_capsLock
End Sub
//n点开邮件
Sub n(delay_n)
    KeyPress Mail, 1
    Delay delay_n
End Sub
//m点开地图加延迟
Sub map(delay_map)
    KeyPress Map1, 1
    Delay delay_map
End Sub
//j点开任务
Sub j(delay_j)
    KeyPress Quests, 1
    Delay delay_j
End Sub
//L编队
Sub l(delay_l)
    KeyPress Team, 1
    Delay delay_l
End Sub
//点击b加延迟（打开背包）
Sub b(delay_b)
    KeyPress Backpack, 1
    Delay delay_b
End Sub
//c共鸣者
Sub c(delay_c)
    KeyPress Resonator, 1
    Delay delay_c
End Sub
//o探索模块
Sub o(delay_o)
    KeyPress Utilities, 1
    Delay delay_o
End Sub
//h教程百科
Sub h(delay_h)
    KeyPress Tutorial, 1
    Delay delay_h
End Sub
//enter聊天
Sub enter(delay_enter)
    KeyPress Chat, 1
    Delay delay_enter
End Sub
//按f1加延迟
Sub f1(f1_delay)
    KeyPress Events, 1
    Delay f1_delay
End Sub
//按f2加延迟
Sub f2(f2_delay)
    KeyPress Guidebook, 1
    Delay f2_delay
End Sub
//按f3加延迟
Sub f3(f3_delay)
    KeyPress Convene, 1
    Delay f3_delay
End Sub
//按f4加延迟
Sub f4(f4_delay)
    KeyPress Pioneer_Podcast, 1
    Delay f4_delay
End Sub
//多人游戏
Sub u(u_delay)
    KeyPress Co_op_Mode, 1
    Delay u_delay
End Sub
